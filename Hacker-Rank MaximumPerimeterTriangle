#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'maximumPerimeterTriangle' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts INTEGER_ARRAY sticks as parameter.
#

def maximumPerimeterTriangle(sticks):
    # Write your code here
    # Sort the sticks in descending order
    sticks.sort(reverse = True)

    # Iterate through the sticks
    for i in range(len(sticks) - 2):
        # Find the two longest remaining sticks 
        # that are shorter than the current stick
        a = sticks[i]
        b = max(sticks[i+1], sticks[i+2])
        c = min(sticks[i+1], sticks[i+2])

        # Check if these three sticks form a triangle
        if a + b > c and a + c > b and b + c > a:
            return [c, b, a]


    # If no triangle was found, return [-1]
    return [-1]

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    sticks = list(map(int, input().rstrip().split()))

    result = maximumPerimeterTriangle(sticks)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
